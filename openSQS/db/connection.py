# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/db/connection.ipynb.

# %% auto 0
__all__ = ['DATABASE_URL', 'engine', 'get_session', 'init_db', 'get_test_session']

# %% ../../nbs/db/connection.ipynb 1
from sqlmodel import create_engine, Session, SQLModel
from contextlib import contextmanager

# %% ../../nbs/db/connection.ipynb 2
# Connection string format: postgresql://username:password@host:port/database
DATABASE_URL = "postgresql://postgres:mysecretpassword@localhost:5432/taskqueue"

# Create the SQLAlchemy engine
engine = create_engine(DATABASE_URL, echo=True)  # Set echo=False in production

# Session factory function
def get_session():
    with Session(engine) as session:
        yield session

# %% ../../nbs/db/connection.ipynb 3
def init_db():
    SQLModel.metadata.create_all(engine)

# %% ../../nbs/db/connection.ipynb 4
@contextmanager
def get_test_session():
    """Context manager for test sessions"""
    session = next(get_session())
    try:
        yield session
    finally:
        session.close()
